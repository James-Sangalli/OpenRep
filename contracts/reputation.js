var proofofburnContract = web3.eth.contract([{ "constant": false, "inputs": [{ "name": "vendor", "type": "address" }], "name": "trade", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "username", "type": "string" }, { "name": "location", "type": "string" }], "name": "addUser", "outputs": [{ "name": "", "type": "string" }], "type": "function" }, { "constant": false, "inputs": [], "name": "burnCoins", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "vendor", "type": "address" }, { "name": "isPositive", "type": "bool" }, { "name": "message", "type": "string" }], "name": "giveReputation", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "user", "type": "address" }], "name": "showBurnedCoins", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "burner", "type": "address" }, { "name": "value", "type": "uint256" }], "name": "burnedBitcoin", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "user", "type": "address" }], "name": "viewReputation", "outputs": [{ "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }], "type": "function" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "amountBurned", "type": "uint256" }], "name": "_coinsBurned", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "message", "type": "string" }], "name": "_positiveReputation", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "message", "type": "string" }], "name": "_negativeReputation", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "username", "type": "string" }, { "indexed": true, "name": "location", "type": "string" }, { "indexed": true, "name": "user", "type": "address" }], "name": "_addUser", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "vendor", "type": "address" }, { "indexed": true, "name": "buyer", "type": "address" }], "name": "_newTrade", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "positive", "type": "uint256" }, { "indexed": true, "name": "negative", "type": "uint256" }, { "indexed": false, "name": "total", "type": "uint256" }], "name": "_viewedReputation", "type": "event" }]);
var proofofburn = proofofburnContract.new(
   {
       from: web3.eth.accounts[0],
       data: '60606040526000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b6112768061006b6000396000f36060604052361561007f576000357c010000000000000000000000000000000000000000000000000000000090048063056ba0561461009d578063079eaf34146100b55780630ca8fe1e146101be578063a3e20625146101e1578063d0b91ca714610249578063f0666fba14610275578063fc70b462146102aa5761007f565b61009b5b66038d7ea4c680003414151561009857610002565b5b565b005b6100b360048080359060200190919050506102e4565b005b6101506004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610500565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cb6004805050610839565b6040518082815260200191505060405180910390f35b6102476004808035906020019091908035906020019091908035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506109cc565b005b61025f6004808035906020019091905050611001565b6040518082815260200191505060405180910390f35b6102946004808035906020019091908035906020019091905050611045565b6040518082815260200191505060405180910390f35b6102c060048080359060200190919050506110cd565b60405180848152602001838152602001828152602001935050505060405180910390f35b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fc57600160005060008273ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600601600050805480600101828181548183558181151161039b5781836000526020600020918201910161039a919061037c565b80821115610396576000818150600090555060010161037c565b5090565b5b5050509190906000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555050600160005060008273ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600701600050805480600101828181548183558181151161046a57601f016020900481601f01602090048360005260206000209182019101610469919061044b565b80821115610465576000818150600090555060010161044b565b5090565b5b505050919090600052602060002090602091828204019190065b6000909190916101000a81548160ff02191690830217905550503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f1c014052f647112a1968122f1bfc7cc52374ca9916ac684e30d730c4abc51dc860405180905060405180910390a35b5b50565b60206040519081016040528060008152602001506000600160005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600050819055506000600160005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600101600050819055506000600160005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506002016000508190555082600160005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506003016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061064457805160ff1916838001178555610675565b82800160010185558215610675579182015b82811115610674578251826000505591602001919060010190610656565b5b5090506106a09190610682565b8082111561069c5760008181506000905550600101610682565b5090565b505081600160005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506004016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061072157805160ff1916838001178555610752565b82800160010185558215610752579182015b82811115610751578251826000505591602001919060010190610733565b5b50905061077d919061075f565b80821115610779576000818150600090555060010161075f565b5090565b50503373ffffffffffffffffffffffffffffffffffffffff1682604051808280519060200190808383829060006004602084601f0104600302600f01f150905001915050604051809103902084604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505060405180910390207f494d4c7084a5431e7e6f7987edbc6837bcb3d78c0fc1a1a03f0ea8b76b2a953660405180905060405180910390a4829050610833565b92915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660006064605a340204604051809050600060405180830381858888f1935050505080156108f45750600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000600a3404604051809050600060405180830381858888f193505050505b156109c35734600160005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600801600082828250540192505081905550343373ffffffffffffffffffffffffffffffffffffffff167f7e9ca5b09d3ef30516d2520994e97739bd78cc00e068ab90a6c83204fef0cc8360405180905060405180910390a3600160005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506008016000505490506109c9566109c8565b610002565b5b90565b6000600090505b600160005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060060160005080549050811015610ffa573373ffffffffffffffffffffffffffffffffffffffff16600160005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060060160005082815481101561000257906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b1c575060001515600160005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506007016000508281548110156100025790600052602060002090602091828204019190065b9054906101000a900460ff161515145b15610fec578215610d8b57600160005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600081815054809291906001019190505550600160005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506005016000508054806001018281815481835581811511610c4c57818360005260206000209182019101610c4b9190610bce565b80821115610c47576000818150805460018160011615610100020316600290046000825580601f10610c005750610c3d565b601f016020900490600052602060002090810190610c3c9190610c1e565b80821115610c385760008181506000905550600101610c1e565b5090565b5b5050600101610bce565b5090565b5b5050509190906000526020600020900160005b8490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cae57805160ff1916838001178555610cdf565b82800160010185558215610cdf579182015b82811115610cde578251826000505591602001919060010190610cc0565b5b509050610d0a9190610cec565b80821115610d065760008181506000905550600101610cec565b5090565b50505081604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505060405180910390208473ffffffffffffffffffffffffffffffffffffffff167f8afab78cf4b7e0239a2fdb37a40d8f54241812d2fa706c80b72456bf7d03d38c60405180905060405180910390a3610feb565b600160005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600101600081815054809291906001019190505550600160005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506005016000508054806001018281815481835581811511610eb057818360005260206000209182019101610eaf9190610e32565b80821115610eab576000818150805460018160011615610100020316600290046000825580601f10610e645750610ea1565b601f016020900490600052602060002090810190610ea09190610e82565b80821115610e9c5760008181506000905550600101610e82565b5090565b5b5050600101610e32565b5090565b5b5050509190906000526020600020900160005b8490919091509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f1257805160ff1916838001178555610f43565b82800160010185558215610f43579182015b82811115610f42578251826000505591602001919060010190610f24565b5b509050610f6e9190610f50565b80821115610f6a5760008181506000905550600101610f50565b5090565b50505081604051808280519060200190808383829060006004602084601f0104600302600f01f15090500191505060405180910390208473ffffffffffffffffffffffffffffffffffffffff167f133c41bd52aad670c4f5cd9080b09c962b0911046d0a80cd5dcafb72bd07b41d60405180905060405180910390a35b5b5b80806001019150506109d3565b5b50505050565b6000600160005060008373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600801600050549050611040565b919050565b60007341f274c0023f83391de4e0733c609df5a124c3d43373ffffffffffffffffffffffffffffffffffffffff1614151561107f57610002565b81600160005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600901600082828250540192505081905590506110c7565b92915050565b600060006000600160005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005054600160005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600001600050548573ffffffffffffffffffffffffffffffffffffffff167f0a732fe1d84c39d715796cdad3b0822606c7327996adaf82bd562ab95eeda59e600160005060008973ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600201600050546040518082815260200191505060405180910390a4600160005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060000160005054600160005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060010160005054600160005060008773ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506002016000505492509250925061126f565b919390925056',
       gas: 4700000
   }, function (e, contract) {
       console.log(e, contract);
       if (typeof contract.address !== 'undefined') {
           console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
       }
   })

//0x2df0e16b4122cc14dabe5d6ecb2ae24bc9d48dc1
var reputation = web3.eth.contract([{ "constant": false, "inputs": [{ "name": "vendor", "type": "address" }], "name": "trade", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "username", "type": "string" }, { "name": "location", "type": "string" }], "name": "addUser", "outputs": [{ "name": "", "type": "string" }], "type": "function" }, { "constant": false, "inputs": [], "name": "burnCoins", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "vendor", "type": "address" }, { "name": "isPositive", "type": "bool" }, { "name": "message", "type": "string" }], "name": "giveReputation", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "user", "type": "address" }], "name": "showBurnedCoins", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "burner", "type": "address" }, { "name": "value", "type": "uint256" }], "name": "burnedBitcoin", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "user", "type": "address" }], "name": "viewReputation", "outputs": [{ "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }], "type": "function" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "amountBurned", "type": "uint256" }], "name": "_coinsBurned", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "message", "type": "string" }], "name": "_positiveReputation", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "message", "type": "string" }], "name": "_negativeReputation", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "username", "type": "string" }, { "indexed": true, "name": "location", "type": "string" }, { "indexed": true, "name": "user", "type": "address" }], "name": "_addUser", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "vendor", "type": "address" }, { "indexed": true, "name": "buyer", "type": "address" }], "name": "_newTrade", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "user", "type": "address" }, { "indexed": true, "name": "positive", "type": "uint256" }, { "indexed": true, "name": "negative", "type": "uint256" }, { "indexed": false, "name": "total", "type": "uint256" }], "name": "_viewedReputation", "type": "event" }]).at("0x2df0e16b4122cc14dabe5d6ecb2ae24bc9d48dc1");


reputation._positiveReputation().watch(function (error, result) {
    console.log(JSON.stringify(result.args));
});

reputation._negativeReputation().watch(function (error, result) {
    console.log(JSON.stringify(result.args));
});

reputation._addUser().watch(function (error, result) {
    console.log(JSON.stringify(result.args));
});

reputation._newTrade().watch(function (error, result) {
    console.log(JSON.stringify(result.args));
});

reputation._viewedReputation().watch(function (error, result) {
    console.log(JSON.stringify(result.args));
});

reputation.addUser.sendTransaction("James", "Sydney", { from: eth.accounts[0], gas: 100000 });

reputation.trade.sendTransaction(eth.accounts[1], { from: eth.accounts[0], gas: 100000, value:1000000000000000 });

reputation.giveReputation.sendTransaction(eth.accounts[1], true, "good trader", { from: eth.accounts[0], gas: 100000, value: 1000000000000000 });

reputation.viewReputation.sendTransaction(eth.accounts[0], { from: eth.accounts[0] });
